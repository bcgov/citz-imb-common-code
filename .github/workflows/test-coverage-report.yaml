name:  Code Climate Test Coverage Reports Generation

on:
  pull_request:
    types: [opened, synchronize] # Triggered by opened or changed pull requests.
    branches: [main]
    paths:
      - '.github/workflows/test-coverage-report.yaml'
      - 'backend/src/**' # Triggers on changes to files in the backend/ directory.
      - 'frontend/src/**' # Triggers on changes to file in the frontend directory
      - 'backend/jest.config.ts'
      - 'frontend/jest.config.ts'     

jobs:
  api-codeclimate-jest-coverage:
    runs-on: ubuntu-latest
    env:
      #GIT_BRANCH: ${{ github.event.pull_request.head.ref }}
      #GIT_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    steps:
      # Checkout code from Repo.
      - name: Checkout Repo
        uses: actions/checkout@v4
        #with:
          # fetch-depth: 0

      # Import Code Climate test reporter.
      - name: Import Code Climate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      # Allow test reporter to be executed.
      - name: Execute Permissions for Code Climate Binary
        run: |
          chmod +x ./cc-test-reporter

      # Notifies Code Climate of impending report.
      - name: Test Reporter Before Build
        run: |
          ./cc-test-reporter before-build

      # Install dependencies.
      - name: Install Dependencies
        working-directory: ./backend
        run: |
          cd ${{ github.workspace }}/backend
          npm i

      # Generate coverage report.
      - name: Run Coverage Report
        working-directory: ./backend
        run: |
          npm run coverage

      # Use lcov to format coverage for Code Climate
      # -t is for coverage type
      - name: Format Test Coverage
        run: |
          ./cc-test-reporter format-coverage ${{ github.workspace }}/backend/coverage/lcov.info -t lcov --output ${{ github.workspace }}/backend/coverage/api-coverage.json

      # Upload JSON for debugging purposes
      - name: Upload JSON for Aggregation
        uses: actions/upload-artifact@v4
        with:
          name: api-coverage-report-json
          path: ${{ github.workspace }}/backend/coverage/api-coverage.json

  frontend-codeclimate-jest-coverage:
    runs-on: ubuntu-latest
    env:
      #GIT_BRANCH: ${{ github.event.pull_request.head.ref }}
      #GIT_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    steps:
      # Checkout code from Repo.
      - name: Checkout Repo
        uses: actions/checkout@v4
        #with:
          # fetch-depth: 0

      # Import Code Climate test reporter.
      - name: Import Code Climate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      # Allow test reporter to be executed.
      - name: Execute Permissions for Code Climate Binary
        run: |
          chmod +x ./cc-test-reporter

      # Notifies Code Climate of impending report.
      - name: Test Reporter Before Build
        run: |
          ./cc-test-reporter before-build

      # Install dependencies.
      - name: Install Dependencies
        working-directory: ./frontend
        run: |
          npm i

      # Generate coverage report.
      - name: Run Coverage Report
        working-directory: ./frontend
        run: |
          npm run coverage

      # WHERE AM I?
      - name: Find coverage file
        working-directory: ./frontend/coverage
        run: |
          ls -al

      # Use lcov to format coverage for Code Climate
      # -t is for coverage type
      - name: Format Test Coverage
        run: |
          ./cc-test-reporter format-coverage ${{ github.workspace }}/frontend/coverage/lcov.info -t lcov --output ${{ github.workspace }}/frontend/coverage/frontend-coverage.json

      # Upload JSON for debugging purposes
      - name: Upload JSON for Aggregation
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report-json
          path: ${{ github.workspace }}/frontend/coverage/frontend-coverage.json

  aggregation:
    runs-on: ubuntu-latest
    needs: [ api-codeclimate-jest-coverage, frontend-codeclimate-jest-coverage ]
    env:
      #GIT_BRANCH: ${{ github.event.pull_request.head.ref }}
      #GIT_COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    steps:
      # Checkout code from Repo.
      - name: Checkout Repo
        uses: actions/checkout@v4
        #with:
          # fetch-depth: 0

      # Import Code Climate test reporter.
      - name: Import Code Climate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      # Allow test reporter to be executed.
      - name: Execute Permissions for Code Climate Binary
        run: |
          chmod +x ./cc-test-reporter

      # Notifies Code Climate of impending report.
      - name: Test Reporter Before Build
        run: |
          ./cc-test-reporter before-build
          
      - name: Create Aggregation Directory
        working-directory: ${{ github.workspace }}
        run: |
          mkdir aggregation

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/aggregation

      - name: Move JSON up a directory
        run: |
          cp ${{ github.workspace }}/aggregation/frontend-coverage-report-json/frontend-coverage.json ${{ github.workspace }}/aggregation/frontend-coverage.json
          cp ${{ github.workspace }}/aggregation/api-coverage-report-json/api-coverage.json ${{ github.workspace }}/aggregation/api-coverage.json

      # Sum the coverage reports
      - name: Summing the coverage reports generated
        run: ./cc-test-reporter sum-coverage aggregation/*-coverage.json -p 2 -o aggregation/summed-coverage.json

      # Upload JSON for debugging purposes
      - name: Upload JSON for debugging purposes
        uses: actions/upload-artifact@v4
        with:
          name: summed-coverage
          path: aggregation/summed-coverage.json 

      # Upload total coverage report to Code Climate
      - name: Upload coverage report to Code Climate
        run: ./cc-test-reporter upload-coverage -d -i aggregation/summed-coverage.json 
