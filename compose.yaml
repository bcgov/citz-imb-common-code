services:
  coco-db:
    container_name: coco-db
    image: postgres:${POSTGRES_IMAGE}
    restart: unless-stopped
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 30s

  coco-api:
    container_name: coco-api
    tty: true
    init: true # Properly handles running as PID 1 inside a container. Source: https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md#handling-kernel-signals
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "node", "/app/scripts/healthcheck.js"] # Check health endpoint for healthy service.
      interval: 30s # Perform the health check every 30 seconds.
      timeout: 10s # Consider the health check a failure if it takes more than 10 seconds.
      retries: 5 # Retry the health check up to 5 times before considering the container unhealthy.
    build:
      context: . # Set to root so backend has access to frontend package.json for parsing
      dockerfile: ./backend/.docker/Dockerfile.dev
      args:
        - NODE_IMAGE_TAG=${NODE_IMAGE_TAG:-21.5-bullseye-slim} # Node image tag
    env_file: .env
    ports:
      - ${BACKEND_PORT:-6600}:6600
    volumes:
      - ./backend/src:/app/src
      - ./backend/node_modules:/app/node_modules
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/package.json:/app/package.json
      - ./backend/package-lock.json:/app/package-lock.json
    depends_on:
      coco-db:
        condition: service_healthy
    networks:
      - app-network

  coco-frontend:
    container_name: coco-frontend
    tty: true
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT:-6500}
    build:
      context: ./frontend
      dockerfile: .docker/Dockerfile.dev
      args:
        - NODE_IMAGE_TAG=${NODE_IMAGE_TAG:-21.5-bullseye-slim} # Node image tag
    ports:
      - ${FRONTEND_PORT:-6500}:6500
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/index.html:/app/index.html
      - ./frontend/nginx.conf:/app/nginx.conf
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
    depends_on:
      coco-api:
        condition: service_healthy
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: "bridge"
